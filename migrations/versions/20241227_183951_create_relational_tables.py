"""create relational tables

Revision ID: 819fe6c2ec4f
Revises: 17ec8871dff4
Create Date: 2024-12-27 18:39:51.699825

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '819fe6c2ec4f'
down_revision = '17ec8871dff4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('container_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.String(), nullable=True),
    sa.Column('expiration', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grocery_list_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grocery_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.String(), nullable=True),
    sa.Column('purchased', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    sa.ForeignKeyConstraint(['grocery_id'], ['grocery_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE container_foods SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE grocery_list_foods SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE recipe_foods SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_foods')
    op.drop_table('grocery_list_foods')
    op.drop_table('container_foods')
    # ### end Alembic commands ###
